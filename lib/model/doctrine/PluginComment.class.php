<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginComment extends BaseComment
{
  // Temporary function, commenter relationships not yet implemented
  public function hasCommenter()
  {
    return $this['Commenter']['username'] != '';
  }

  // ===================================
  // = Options for Approving a Comment =
  // ===================================
  public function approve()
  { 
    $this->setApproved(true);
    $this->setApprovedAt(date('Y-m-d'));
    $this->save();
  }
  
  public function unapprove()
  {
   $this->setApproved(false);
   $this->setApprovedAt(null);
   $this->save();
  }

  public function isApproved()
  {
    return $this->getApproved();
  }

  // Get all modules acting as Commentable
  public function getCommentables()
  {
    $dispatcher = ProjectConfiguration::getActive()->getEventDispatcher();
    $event = new sfEvent($this, 'commentable.add_commentable_class');

    $dispatcher->notify($event);
    
    $commentables = $event->getReturnValue();

    return $commentables ? $commentables : array();
  }

  public function preInsert($event)
  {
    $approvedByDefault = false;
    if ($approvedByDefault) 
    {
      $this['approved'] = true;
      $this['approved_at'] = date("Y-m-d");
    }
  }

  public function setTableDefinition()
  {
    // Add all the Commentable relations
    foreach ($this->getCommentables() as $class) 
    {
     $this->hasMany($class, array('refClass' => $class.'Comment',
                                                'local' => 'comment_id',
                                                'foreign' => 'id'));

     $this->hasOne($class.'Comment', array('local' => 'id',
                                  'foreign' => 'comment_id'));
    }

    return parent::setTableDefinition();
  }
}

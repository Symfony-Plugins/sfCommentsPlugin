<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginComment extends BaseComment
{
 protected $_commentables = array();

 public function hasCommenter()
 {
   return ((string)$this['Commenter'] != null && (string)$this['Commenter'] != '');
 }
 
 public function setTableDefinition()
 {
   // Inexusable hack for creating dynamic relationships on Comment class
   foreach ($this->getCommentables() as $class) 
   {
     $this->hasMany($class, array('refClass' => $class.'Comment',
                                                'local' => 'comment_id',
                                                'foreign' => 'id'));

     $this->hasOne($class.'Comment', array('local' => 'id',
                                  'foreign' => 'comment_id'));
   }
   
   return parent::setTableDefinition();
 }
 
 // Get all modules acting as Commentable
 public function getCommentables()
 {
   $dispatcher = ProjectConfiguration::getActive()->getEventDispatcher();
   $event = new sfEvent($this, 'commentable.add_commentable_class');
   
   $dispatcher->notify($event);
   
   return $event->getReturnValue();
 }
 
 public function addCommentable(sfEvent $event)
 {
   $this->_commentables[] = $event['commentable'];
 }
}
